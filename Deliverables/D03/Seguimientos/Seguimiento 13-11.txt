No hay presupuesto por parte del cliente.

MODELO DE DOMINIO

*HECHO* - Es mejor segun la teoria navegar desde phase a application, porque dice que se navega desde la relación débil a la fuerte.
- Mirar también todas las navegabilidades, porque normalmente es desde el extremo "muchos" al extremo "uno". También
ver cual es la entidad debil y la entidad fuerte. Por ejemplo, application y fixuptask. 

QUERIES

- Eficiencia en una sola consulta en el C/3 en lugar de hacer 4 consultas distintas.
- En las queries existe un operador que te devuelve la desviación estandar directamente (stdev)
- Introduce fixuptask f que no vale para nada en donde la propuesta 1 y propuesta 2.
- C5 mejor select count.
- Consulta anidada en varias querys
- Query B/3 en un solo select.
- Query B/4 esta mal directamente.

DUDA 1 - Se registra sin sponsorship, 1 - 0..*

DUDA 3 - Horas para el que ha hecho la tarea.


CONCLUSIONES

Ha puesto un ejemplo en la pizarra de una relacion Warranty<-FixUpTask y ha puesto una multiplicidad de 1<-0..* y en esa relacion warranty es la entidad fuerte y fixuptask la debil.

Las queries con un top 3 que lo que haremos sera pedir toda la lista de elementos y luego en java elegiremos los 3 primeros. Solo en este caso hace falta codigo extra.

El tiempo total se calcula tomando 10h a la semana de trabajo por cada integrante. Normalmente son 2 semanas, 20h y de ahi sacas el presupuesto.