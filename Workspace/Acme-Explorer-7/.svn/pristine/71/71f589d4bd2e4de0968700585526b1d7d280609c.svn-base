
package services;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;


import repositories.SocialIdentityRepository;



import domain.Actor;
import domain.SocialIdentity;



@Service
@Transactional
public class SocialIdentityService {

	// Managed Repository
	@Autowired
	private SocialIdentityRepository	socialIdentityRepository;

	// Supporting services
	@Autowired
	private ActorService actorService;
	

	// Constructors

	public SocialIdentityService() {
		super();
	}

	// Simple CRUD methods

	
	public SocialIdentity create() {
		SocialIdentity result;
		Actor principal;
		
		
		principal = this.actorService.findByPrincipal();
		Assert.notNull(principal);

		result = new SocialIdentity();
		Assert.notNull(result);

		return result;
	}
	
	
	
	
	
	public Collection<SocialIdentity> findByPrincipal() {
		Collection<SocialIdentity> result;
		Actor principal;
		
		principal = this.actorService.findByPrincipal();
		Assert.notNull(principal);
		
		result = principal.getSocialIdentities();
	
		
		Assert.notNull(result);
		
		return result;
	}
	
	
	
	public SocialIdentity save(SocialIdentity socialIdentity) {
		SocialIdentity result;
		Actor principal;
		
		principal = this.actorService.findByPrincipal();
		Assert.notNull(principal);
		

		result = this.socialIdentityRepository.save(socialIdentity);
		Assert.notNull(result);
		
		return result;
	
	}
	
	
	public void delete(SocialIdentity socialIdentity) {
		Actor actor;
		
		Assert.notNull(socialIdentity);
		Assert.isTrue(socialIdentity.getId() != 0);
		
		actor = this.actorService.findByPrincipal();
		Assert.notNull(actor);
		
	
	
		this.socialIdentityRepository.delete(socialIdentity);
	
	}

	

	// Other business methods
	
 
	
}
