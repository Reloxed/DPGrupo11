
package services;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.util.Assert;


import repositories.VatTaxRepository;


import domain.Administrator;
import domain.VatTax;




@Service
@Transactional
public class VatTaxService {

	
	// Managed Repository
	@Autowired
	private VatTaxRepository	vatTaxRepository;

	// Supporting services

	@Autowired
	private AdministratorService administratorService;
	

	
	// Constructors

	public VatTaxService() {
		super();
	}

	
	// Simple CRUD methods

	
	public Collection<VatTax> findAll() {
		Collection<VatTax> result;
		Administrator principal;
		
		principal = this.administratorService.findByPrincipal();
		Assert.notNull(principal);
		
		result = this.vatTaxRepository.findAll();
	
		Assert.notNull(result);
		
		return result;
	}
	
	public VatTax findOne(int vatTaxId) {
		VatTax result;
	
		result = this.vatTaxRepository.findOne(vatTaxId);
	
		Assert.notNull(result);
		
		return result;
	}
	
	
	public VatTax create() {
		VatTax result;
		Administrator principal;
		
		principal = this.administratorService.findByPrincipal();
		Assert.notNull(principal);

		result = new VatTax();
		Assert.notNull(result);

		return result;
	}
	
	
	public VatTax save(VatTax vatTax) {
		VatTax result;
		Administrator principal;
		
		
		principal = this.administratorService.findByPrincipal();
		Assert.notNull(principal);
		
		
		result = this.vatTaxRepository.save(vatTax);
		Assert.notNull(result);
		
		return result;
	
	}
	
	
	public void delete(VatTax vatTax) {
		Administrator principal;
		
		Assert.notNull(vatTax);
		Assert.isTrue(vatTax.getId() != 0);
	
		principal = this.administratorService.findByPrincipal();
		Assert.notNull(principal);
		

	
		this.vatTaxRepository.delete(vatTax);
	
	}
	

	// Other business methods
	
 
	
}
