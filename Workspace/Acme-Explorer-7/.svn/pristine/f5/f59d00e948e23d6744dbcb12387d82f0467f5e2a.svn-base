
package controllers.explorer;

import java.util.Collection;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.util.Assert;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import services.ApplicationService;
import controllers.AbstractController;
import domain.Application;

@Controller
@RequestMapping("/application/explorer")
public class ApplicationExplorerController extends AbstractController {

	// Services

	@Autowired
	private ApplicationService	applicationService;


	// Constructors

	public ApplicationExplorerController() {
		super();
	}

	// Listing

	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public ModelAndView list() {
		final ModelAndView result;
		final Collection<Application> applications;
		final Collection<Application> cancellableApplications;

		applications = this.applicationService.findByPrincipal();
		cancellableApplications = this.applicationService.findCancellableApplicationsByPrincipal();

		result = new ModelAndView("application/list");
		result.addObject("applications", applications);
		result.addObject("cancellableApplications", cancellableApplications);
		result.addObject("requestURI", "application/explorer/list.do");

		return result;

	}

	/*
	 * @RequestMapping(value = "/edit", method = RequestMethod.GET)
	 * public ModelAndView edit(@RequestParam final int applicationId) {
	 * final ModelAndView result;
	 * Application application;
	 * Boolean comment;
	 * 
	 * application = this.applicationService.findOne(applicationId);
	 * Assert.notNull(application);
	 * 
	 * comment = true;
	 * 
	 * result = new ModelAndView("application/edit");
	 * result.addObject("application", application);
	 * result.addObject("comment", comment);
	 * return result;
	 * }
	 * 
	 * 
	 * @RequestMapping(value = "/edit", method = RequestMethod.POST, params="save")
	 * public ModelAndView save(@RequestParam final int applicationId) {
	 * final ModelAndView result;
	 * Application application;
	 * Boolean comment;
	 * 
	 * application = this.applicationService.findOne(applicationId);
	 * Assert.notNull(application);
	 * 
	 * comment = true;
	 * 
	 * result = new ModelAndView("application/edit");
	 * result.addObject("application", application);
	 * result.addObject("comment", comment);
	 * return result;
	 * }
	 */

	@RequestMapping(value = "/cancel", method = RequestMethod.GET)
	public ModelAndView approve(@RequestParam final int applicationId) {
		ModelAndView result;
		Application application;

		application = this.applicationService.findOne(applicationId);
		Assert.notNull(application);

		this.applicationService.cancel(application);

		result = new ModelAndView("redirect:list.do");

		return result;

	}

}
